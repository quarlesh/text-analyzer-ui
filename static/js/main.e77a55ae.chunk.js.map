{"version":3,"sources":["components/Header.js","components/Messages/MessageCard.js","data.js","components/Messages/Messages.js","components/App.js","serviceWorker.js","index.js"],"names":["withStyles","appBar","fontFamily","fontSize","padding","card","margin","width","props","classes","className","root","AppBar","position","title","style","display","Typography","item","name","Card","List","dense","ListItem","ListItemText","primary","primaryTypographyProps","one_words","map","word","marginRight","two_words","data","justifyContent","alignItems","flexWrap","items","absolute","Fragment","backgroundColor","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e77a55ae.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Paper, Card, CardContent } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({\n    appBar: {\n        fontFamily: 'Roboto, Helvetica, Arial, sans-serif',\n        fontSize: '26px',\n        padding: '15px 0 10px 20px'\n    },\n    card: {\n        margin: '10px 50px 50px 50px',\n        width: '500px'\n    },\n    \n})\nfunction Header(props) {\n    const { classes } = props\n    return (\n        <div className={classes.root}>\n        <AppBar className={classes.appBar} position=\"static\">\n            Text Analyzer\n        </AppBar>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(Header);","import React from 'react'\nimport { Typography, Card, List, ListItem, ListItemText } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextsmsIcon from '@material-ui/icons/Textsms'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\n\n\n\nconst styles = () => ({\n    card: {\n        margin: '10px 50px 50px 50px',\n        width: '500px'\n    },\n    title: {\n        margin: '5px 0 -10px 5px',\n        fontSize: '20px'\n    }\n    \n})\nfunction MessageCard(props) {\n    const { classes } = props\n    return (\n        <div className={classes.root} style={{margin: '10px 0 0 0'}}>\n            <div style={{display:'inline-flex', margin: '0 0 0 50px'}}>                    \n                <AccountCircleIcon style={{ fontSize: 40 }}/>\n                <Typography className={classes.title}>\n                    {props.item.name}\n                </Typography>\n            </div>\n            <Card className={classes.card}>\n            <List dense={true}>\n                <ListItem>\n                    <ListItemText primary={\"Most distinguishing words\"} primaryTypographyProps={{style: {fontSize:'18px'}}}/>\n                </ListItem>\n            {\n               props.item && props.item.one_words.map( word => (\n                <ListItem>\n                    <TextsmsIcon fontSize='inherit' style={{marginRight:'5px'}}/>\n                    <ListItemText primary={word.word}/>\n                </ListItem>\n               ))\n            }\n            </List>\n            <List dense={true}>\n                <ListItem>\n                <ListItemText primary={\"Most distinguishing 2-word phrases\"} primaryTypographyProps={{style: {fontSize:'18px'}}}/>\n                </ListItem>\n            {\n               props.item && props.item.two_words.map( word => (\n                <ListItem>\n                    <TextsmsIcon fontSize='inherit' style={{marginRight:'5px'}}/>\n                    <ListItemText primary={word.word}/>\n                </ListItem>\n               ))\n            }\n            </List>\n            </Card>\n        </div>\n    )\n}\n\nexport default withStyles(styles)(MessageCard);","const data =  {\n        \"items\": [\n            { \n                \"id\": 0,\n                \"name\": \"Angela Satullo\",\n                \"one_words\": [\n                    {\n                        \"word\": \"totally\"\n                    },\n                    {\n                        \"word\": \"renee\"\n                    },\n                    {\n                        \"word\": \"ya\"\n                    }\n                ],\n                \"two_words\": [\n                    {\n                        \"word\": \"ya just\"\n                    },\n                    {\n                        \"word\": \"wine night\"\n                    },\n                    {\n                        \"word\": \"don know\"\n                    }\n                ] \n            },\n            { \n                \"id\": 1,\n                \"name\": \"Jacob Kalt\",\n                \"one_words\": [\n                    {\n                        \"word\": \"image\"\n                    },\n                    {\n                        \"word\": \"ok\"\n                    },\n                    {\n                        \"word\": \"goodnight\"\n                    }\n                ],\n                \"two_words\": [\n                    {\n                        \"word\": \"going bed\"\n                    },\n                    {\n                        \"word\": \"liked image\"\n                    },\n                    {\n                        \"word\": \"loved image\"\n                    }\n                ] \n            },\n            { \n                \"id\": 2,\n                \"name\": \"Sasha Morford\",\n                \"one_words\": [\n                    {\n                        \"word\": \"thats\"\n                    },\n                    {\n                        \"word\": \"dont\"\n                    },\n                    {\n                        \"word\": \"im\"\n                    }\n                ],\n                \"two_words\": [\n                    {\n                        \"word\": \"honors option\"\n                    },\n                    {\n                        \"word\": \"im confused\"\n                    },\n                    {\n                        \"word\": \"im gonna\"\n                    }\n                ] \n            },\n            { \n                \"id\": 0,\n                \"name\": \"Shelby Weber\",\n                \"one_words\": [\n                    {\n                        \"word\": \"sorry\"\n                    },\n                    {\n                        \"word\": \"okay\"\n                    },\n                    {\n                        \"word\": \"yea\"\n                    }\n                ],\n                \"two_words\": [\n                    {\n                        \"word\": \"sorry love\"\n                    },\n                    {\n                        \"word\": \"oh sorry\"\n                    },\n                    {\n                        \"word\": \"okay thanks\"\n                    }\n                ] \n            },\n            { \n                \"id\": 0,\n                \"name\": \"tofu \\\"colander\\\" dndndn buagin\",\n                \"one_words\": [\n                    {\n                        \"word\": \"adam\"\n                    },\n                    {\n                        \"word\": \"like\"\n                    },\n                    {\n                        \"word\": \"liz\"\n                    }\n                ],\n                \"two_words\": [\n                    {\n                        \"word\": \"youtube com\"\n                    },\n                    {\n                        \"word\": \"https youtube\"\n                    },\n                    {\n                        \"word\": \"loved image\"\n                    }\n                ] \n            }\n        ]\n      }\n\nexport default data","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MessageCard from './MessageCard'\nimport data from '../../data.js'\nconst styles = () => ({\n    \n    \n})\n\nfunction Messages(props) {\n    const { classes } = props\n    \n    return (\n        <div className={classes.root} style={{display:'inline-flex',\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexWrap:'wrap'}}>\n           {\n               data.items.map( item => (\n                   <MessageCard item={item} />\n               ))\n           }\n        </div>\n    )\n}\n\nexport default withStyles(styles)(Messages);","import React from 'react';\nimport Header from './Header.js'\nimport Messages from './Messages/Messages'\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({\n  absolute: {\n    position: 'absolute',\n  }\n  \n})\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header title=\"Hello World\" className=\"absolute\"/>\n      <div style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          backgroundColor: '#f0f3f6'\n        }}>\n        <Messages className=\"absolute\"/>\n      </div>\n    </React.Fragment>\n\n  )\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}